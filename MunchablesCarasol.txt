
<div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
    <ol class="carousel-indicators">
      <li
        data-target="#carouselExampleIndicators"
        data-slide-to="0"
        class="active"
      ></li>
      <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
      <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
    </ol>
    <div class="carousel-inner" id="slide_container ">
      <div class="carousel-item active ">
        <section id="flex" style="background-image: url(food.jpeg)">
           <div id="justify_content" *ngFor="let recipe of recipes; let i=index" >
            <div class="card" style="width: 18rem;">
              <div class="card-body">
                <h5 class="card-title">{{recipe.recipeName}}</h5>
                <div *ngFor="let step of steps">
                <p class="card-text" >
                    {{ step.step }}
                </p>
              </div>
                <a href="#" class="btn btn-primary">View Recipe</a>
              </div>
            </div>


          </div>
        </section>
      </div>
      <!-- ADD NG FOR here -->

      <div class="carousel-item ">
        <section id="flex" style="background-image: url(food.jpeg)">
          <div id="justify_content">
            <div class="card" style="width: 18rem;">
              <div class="card-body">
                <h5 class="card-title">Testing 2</h5>
                <p class="card-text">
                  Some quick example text to build on the card title and make up
                  the bulk of the card's content.
                </p>
                <a href="#" class="btn btn-primary">View Recipe</a>
              </div>
            </div>
            <div class="card" style="width: 18rem;">
              <div class="card-body">
                <h5 class="card-title"></h5>
                <p class="card-text">
                  Some quick example text to build on the card title and make up
                  the bulk of the card's content.
                </p>
                <a href="#" class="btn btn-primary">View Recipe</a>
              </div>
            </div>
            <div class="card" style="width: 18rem;">
              <div class="card-body">
                <h5 class="card-title"></h5>
                <p class="card-text">
                  Some quick example text to build on the card title and make up
                  the bulk of the card's content.
                </p>
                <a href="#" class="btn btn-primary">View Recipe</a>
              </div>
            </div>
          </div>
        </section>
      </div>
    </div>

    <a
      class="carousel-control-prev"
      href="#carouselExampleIndicators"
      role="button"
      data-slide="prev"
    >
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="sr-only">Previous</span>
    </a>
    <a
      class="carousel-control-next"
      href="#carouselExampleIndicators"
      role="button"
      data-slide="next"
    >
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="sr-only">Next</span>
    </a>
  </div>
  <div class="carousel-item">
    <img src="..." alt="..." />
    <div class="carousel-caption d-none d-md-block">
      <h5>Testing this badboy</h5>
      <p>...</p>
    </div>
  </div>


<div id="justify_content" *ngFor="let recipe of recipes; let i = index">
  <h5 class="card-title">{{ recipe.recipeName }}</h5>
  <div *ngFor="let ingredients of ingredient">
    <p class="card-text" *ngIf="recipe.recipeId === ingredients.recipeId">
      {{ ingredients.name }}
    </p>
  </div>
  <div *ngFor="let step of steps">
    <p class="card-text" *ngIf="recipe.recipeId === step.recipeId">
      {{ step.step }}
    </p>
  </div>
</div>

// Working on generating id's for ingredients
genIngredientId(temp: Ingredients[]): number {
    return temp.length > 0 ? Math.max(...temp.map(ingredient => ingredient.ingredientId)) + 1 : 1;
  }
  
  addIngredient(name: string): void {
    this.ingredientsService.addIngredient({name} as Ingredients).subscribe(temp => {
      temp.ingredientId = this.genIngredientId(this.ingredient);
      temp.recipeId = 5;//this.genRecipeId(this.ingredient);
      this.ingredient.push(temp);
      console.log(temp);
    });
  }